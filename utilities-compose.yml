name: utilities
services:
  sonarqube:
    build:
      context: docker/utilities/sonarqube/
    container_name: sonarqube
    depends_on:
      - sonarqube-db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      VIRTUAL_PORT: ${SONARQUBE_VIRTUAL_PORT:-9000}
      VIRTUAL_HOST: ${SONARQUBE_VIRTUAL_HOST:-}
      LETSENCRYPT_HOST: ${SONARQUBE_LETSENCRYPT_HOST:-}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - utilities
      - default
    expose:
      - ${SONARQUBE_VIRTUAL_PORT:-9000}

  sonarqube-db:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - sonar_db_data:/var/lib/postgresql/data
    networks:
      - utilities

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  # https://gajus.com/blog/setting-up-postgre-sql-for-running-integration-tests
  sonar_db_data:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  utilities:
  default:
    external: true
    name: proxy
