services:
  nginx-sut:
    image: nginx:1.26.1-alpine # deliberetly using older image
    container_name: nginx-sut
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    environment:
      - VIRTUAL_HOST=dev.localhost,foo.bar.com,baz.bar.com,bar.com
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:80/healthcheck || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
    depends_on:
      - nginx-proxy

  api:
    image: ghcr.io/atrakic/azure-go-app:0.0.3
    container_name: api
    environment:
      - PORT=${PORT:-3000}
      - VIRTUAL_HOST=api.example
      - VIRTUAL_PORT=${PORT:-3000}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    healthcheck:
      test: ["CMD", "/usr/bin/wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 5s
      timeout: 3s
      retries: 3
    depends_on:
      - nginx-proxy

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
    environment:
     - DEFAULT_HOST=dev.localhost
     - NO_COLOR=1
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  watchtower:
    image: containrrr/watchtower:${WATCHTOWER_RELEASE:-latest}
    container_name: watchtower
    restart: unless-stopped
    command: --interval 86400 --http-api-update --http-api-periodic-polls
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_HTTP_API_TOKEN: "${WATCHTOWER_HTTP_API_TOKEN:-foo}"
      WATCHTOWER_NOTIFICATION_URL: "${WATCHTOWER_NOTIFICATION_URL:-}"
      VIRTUAL_PORT: ${WATCHTOWER_VIRTUAL_PORT:-8080}
      VIRTUAL_HOST: ${WATCHTOWER_VIRTUAL_HOST:-watchtower}
      LETSENCRYPT_HOST: ${WATCHTOWER_LETSENCRYPT_HOST:-}
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    depends_on:
      - nginx-proxy
